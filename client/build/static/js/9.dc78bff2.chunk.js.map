{"version":3,"sources":["views/pages/NewInspection.js"],"names":["navs","NewInspection","state","activeStep","currentData","_id","photos","vehicleDetails","ownerDetails","engineCompartment","brakeSystem","electricalControls","frontSuspension","rearSuspension","exhaustSystem","bodyInterior","bodyExterior","underbody","roadTest","tyres","toggle","tab","setState","setCurrentData","data","toast","success","JSON","stringify","this","className","src","decorLeft","alt","decorRight","size","to","Ripple","block","color","tabs","map","item","index","key","classnames","active","onClick","activeTab","tabId","React","Component"],"mappings":"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","file":"static/js/9.dc78bff2.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport { Award } from \"react-feather\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport classnames from \"classnames\"\r\nimport Step1 from \"../../components/steps/Step1\";\r\nimport Step2 from \"../../components/steps/Step2\";\r\nimport Step3 from \"../../components/steps/Step3\";\r\nimport Step4 from \"../../components/steps/Step4\";\r\nimport Step5 from \"../../components/steps/Step5\";\r\nimport Step6 from \"../../components/steps/Step6\";\r\nimport Step7 from \"../../components/steps/Step7\";\r\nimport Step8 from \"../../components/steps/Step8\";\r\nimport Step9 from \"../../components/steps/Step9\";\r\nimport Step10 from \"../../components/steps/Step10\";\r\nimport Step11 from \"../../components/steps/Step11\";\r\nimport Step12 from \"../../components/steps/Step12\";\r\nimport Step13 from \"../../components/steps/Step13\";\r\nimport Step14 from \"../../components/steps/Step14\";\r\nimport Step15 from \"../../components/steps/Step15\";\r\n\r\n\r\nimport decorLeft from \"../../assets/img/elements/decore-left.png\"\r\nimport decorRight from \"../../assets/img/elements/decore-right.png\"\r\n\r\nimport \"../../assets/scss/pages/dashboard-analytics.scss\"\r\n\r\nconst navs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\nclass NewInspection extends React.Component {\r\n  state = {\r\n    activeStep: 0,\r\n    currentData: {\r\n      _id: null,\r\n      photos: [],\r\n      vehicleDetails: null,\r\n      ownerDetails: null,\r\n      engineCompartment: null,\r\n      brakeSystem: null,\r\n      electricalControls: null,\r\n      frontSuspension: null,\r\n      rearSuspension: null,\r\n      exhaustSystem: null,\r\n      bodyInterior: null,\r\n      bodyExterior: null,\r\n      underbody: null,\r\n      roadTest: null,\r\n      tyres: null,\r\n    },\r\n  }\r\n\r\n  toggle = tab => {\r\n    if (this.state.activeStep !== tab) {\r\n      this.setState({ activeStep: tab })\r\n    }\r\n  }\r\n\r\n  setCurrentData = (data) => {\r\n    let { currentData } = this.state;\r\n    currentData = { ...currentData, ...data };\r\n    this.setState({currentData}, () => {\r\n      toast.success(JSON.stringify(\"Success!\", null, 2))\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { currentData } = this.state;\r\n    return (\r\n      <>\r\n        <Card className=\"bg-analytics text-white sales-card\">\r\n          <CardBody className=\"text-center\">\r\n            <img src={decorLeft} alt=\"card-img-left\" className=\"img-left\" />\r\n            <img src={decorRight} alt=\"card-img-right\" className=\"img-right\" />\r\n            <div className=\"avatar avatar-xl bg-primary shadow avatar-dashboard mt-0\">\r\n              <div className=\"avatar-content\">\r\n                <Award className=\"text-white\" size={28} />\r\n              </div>\r\n            </div>\r\n            <div className=\"award-info text-center\">\r\n              <h1 className=\"mb-2 text-white\">Congratulations John,</h1>\r\n              <div className=\"m-auto mb-0 w-50\">\r\n                <Link to=\"/\">\r\n                  <Button.Ripple\r\n                    block\r\n                    className=\"btn-block bg-gradient-info\"\r\n                    color=\"none\"\r\n                  >\r\n                    GO TO HOME\r\n                  </Button.Ripple>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>New Inspection</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <div className=\"\">\r\n              <Nav tabs className=\"nav-left\">\r\n                {\r\n                  navs && navs.map((item, index) => {\r\n                    return (\r\n                      <NavItem key={index}>\r\n                        <NavLink\r\n                          className={classnames({\r\n                            active: this.state.activeStep === index\r\n                          })}\r\n                          onClick={() => {\r\n                            this.toggle(index)\r\n                          }}\r\n                        >\r\n                          Step {index + 1}\r\n                        </NavLink>\r\n                      </NavItem>\r\n                    )\r\n                  })\r\n                }\r\n              </Nav>\r\n              <TabContent activeTab={this.state.activeStep} className=\"mt-1\">\r\n                {\r\n                  navs && navs.map((item, index) => {\r\n                    return (\r\n                      <TabPane tabId={index} key={index}>\r\n                        {\r\n                          index === 0 && ( <Step1 setCurrentData={this.setCurrentData} /> )\r\n                        }\r\n                        {\r\n                          index == 1 && ( <Step2 currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 2 && ( <Step3 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 3 && ( <Step4 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        \r\n                        {\r\n                          index == 4 && ( <Step5 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 5 && ( <Step6 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 6 && ( <Step7 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 7 && ( <Step8 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 8 && ( <Step9 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 9 && ( <Step10 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 10 && ( <Step11 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 11 && ( <Step12 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 12 && ( <Step13 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 13 && ( <Step14 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index == 14 && ( <Step15 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                      </TabPane>\r\n                    )\r\n                  })\r\n                }\r\n              </TabContent>\r\n            </div>\r\n          <ToastContainer />\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default NewInspection\r\n"],"sourceRoot":""}