{"version":3,"sources":["views/pages/NewInspection.js"],"names":["steps","NewInspection","state","activeStep","currentData","_id","photos","vehicleDetails","ownerDetails","engineCompartment","transmission","brakeSystem","electricalControls","frontSuspension","rearSuspension","exhaustSystem","bodyInterior","bodyExterior","underbody","roadTest","tyres","toggle","tab","setState","setCurrentData","data","toast","success","JSON","stringify","this","className","src","decorLeft","alt","decorRight","homeLogo","height","to","Ripple","block","color","tabs","map","item","index","key","classnames","active","onClick","size","activeTab","tabId","React","Component"],"mappings":"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","file":"static/js/10.2b7c7dfc.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport { Award } from \"react-feather\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport classnames from \"classnames\"\r\nimport * as Icon from \"react-feather\"\r\n\r\nimport Step1 from \"../../components/steps/Step1\";\r\nimport Step2 from \"../../components/steps/Step2\";\r\nimport Step3 from \"../../components/steps/Step3\";\r\nimport Step4 from \"../../components/steps/Step4\";\r\nimport Step5 from \"../../components/steps/Step5\";\r\nimport Step6 from \"../../components/steps/Step6\";\r\nimport Step7 from \"../../components/steps/Step7\";\r\nimport Step8 from \"../../components/steps/Step8\";\r\nimport Step9 from \"../../components/steps/Step9\";\r\nimport Step10 from \"../../components/steps/Step10\";\r\nimport Step11 from \"../../components/steps/Step11\";\r\nimport Step12 from \"../../components/steps/Step12\";\r\nimport Step13 from \"../../components/steps/Step13\";\r\nimport Step14 from \"../../components/steps/Step14\";\r\nimport Step15 from \"../../components/steps/Step15\";\r\n\r\n\r\nimport decorLeft from \"../../assets/img/elements/decore-left.png\"\r\nimport decorRight from \"../../assets/img/elements/decore-right.png\"\r\nimport homeLogo from \"../../assets/img/logo/hom_logo.png\";\r\n\r\nimport \"../../assets/scss/pages/dashboard-analytics.scss\"\r\n\r\nconst steps = [\r\n  \"photos\",\r\n  \"vehicleDetails\",\r\n  \"ownerDetails\",\r\n  \"engineCompartment\",\r\n  \"transmission\",\r\n  \"brakeSystem\",\r\n  \"electricalControls\",\r\n  \"frontSuspension\",\r\n  \"rearSuspension\",\r\n  \"exhaustSystem\",\r\n  \"bodyInterior\",\r\n  \"bodyExterior\",\r\n  \"underbody\",\r\n  \"tyres\",\r\n  \"roadTest\",\r\n  \"finalize\"\r\n];\r\n\r\nclass NewInspection extends React.Component {\r\n  state = {\r\n    activeStep: 0,\r\n    currentData: {\r\n      _id: null,\r\n      photos: null,\r\n      vehicleDetails: null,\r\n      ownerDetails: null,\r\n      engineCompartment: null,\r\n      transmission: null,\r\n      brakeSystem: null,\r\n      electricalControls: null,\r\n      frontSuspension: null,\r\n      rearSuspension: null,\r\n      exhaustSystem: null,\r\n      bodyInterior: null,\r\n      bodyExterior: null,\r\n      underbody: null,\r\n      roadTest: null,\r\n      tyres: null,\r\n    },\r\n  }\r\n\r\n  toggle = tab => {\r\n    if (this.state.activeStep !== tab) {\r\n      this.setState({ activeStep: tab })\r\n    }\r\n  }\r\n\r\n  setCurrentData = (data) => {\r\n    let { currentData } = this.state;\r\n    currentData = { ...currentData, ...data };\r\n    this.setState({currentData}, () => {\r\n      toast.success(JSON.stringify(\"Success!\", null, 2))\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { currentData } = this.state;\r\n    return (\r\n      <>\r\n        <Card className=\"text-white sales-card\">\r\n          <CardBody className=\"text-center\">\r\n            <img src={decorLeft} alt=\"card-img-left\" className=\"img-left\" />\r\n            <img src={decorRight} alt=\"card-img-right\" className=\"img-right\" />\r\n            <div className=\"award-info text-center\">\r\n            <img src={homeLogo} height=\"50\" className=\"mb-2\" alt=\"homeLogo\"/>\r\n              <div className=\"m-auto mb-0 w-50\">\r\n                <Link to=\"/\">\r\n                  <Button.Ripple\r\n                    block\r\n                    className=\"btn-block bg-warning text-white\"\r\n                    color=\"none\"\r\n                  >\r\n                    GO TO HOME\r\n                  </Button.Ripple>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>New Inspection</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <div className=\"\">\r\n              <Nav tabs className=\"nav-left\">\r\n                {\r\n                  steps && steps.map((item, index) => {\r\n                    return (\r\n                      <NavItem key={index}>\r\n                        <NavLink\r\n                          className={classnames({\r\n                            active: this.state.activeStep === index\r\n                          })}\r\n                          onClick={() => {\r\n                            this.toggle(index)\r\n                          }}\r\n                        >\r\n                          {\r\n                            currentData[item] ? (\r\n                              <Icon.Check color=\"green\" size={16} className=\"mr-1 fonticon-wrap\" />\r\n                            ) : (\r\n                              <Icon.XCircle color=\"red\" size={16} className=\"mr-1 fonticon-wrap\" />\r\n                            )\r\n                          }\r\n                          Step {index + 1}\r\n                        </NavLink>\r\n                      </NavItem>\r\n                    )\r\n                  })\r\n                }\r\n              </Nav>\r\n              <TabContent activeTab={this.state.activeStep} className=\"mt-1\">\r\n                {\r\n                  steps && steps.map((item, index) => {\r\n                    return (\r\n                      <TabPane tabId={index} key={index}>\r\n                        {\r\n                          index === 0 && ( <Step1 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 1 && ( <Step2 currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 2 && ( <Step3 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 3 && ( <Step4 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        \r\n                        {\r\n                          index === 4 && ( <Step5 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 5 && ( <Step6 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 6 && ( <Step7 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 7 && ( <Step8 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 8 && ( <Step9 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 9 && ( <Step10 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 10 && ( <Step11 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 11 && ( <Step12 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 12 && ( <Step13 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 13 && ( <Step14 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                        {\r\n                          index === 14 && ( <Step15 setCurrentData={this.setCurrentData} currentData={currentData} /> )\r\n                        }\r\n                      </TabPane>\r\n                    )\r\n                  })\r\n                }\r\n              </TabContent>\r\n            </div>\r\n          <ToastContainer />\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default NewInspection\r\n"],"sourceRoot":""}